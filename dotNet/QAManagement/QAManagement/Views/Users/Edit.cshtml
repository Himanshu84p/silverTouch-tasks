@model QAManagement.Models.User

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h2>Edit User</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">User</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.DropDownListFor(model => model.Role, new SelectList(new[]
                        {
                            new SelectListItem { Text = "Student", Value = "Student" },
                            new SelectListItem { Text = "Teacher", Value = "Teacher" },
                        }, "Value", "Text"), "-- Select Role --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>

                        <div class="form-group text-center">
                            <input type="submit" value="Save" class="btn btn-primary mt-3 mb-2" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="text-center mt-3">
        @Html.ActionLink("Go to Users", "Index", null, new { @class = "btn btn-secondary" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
