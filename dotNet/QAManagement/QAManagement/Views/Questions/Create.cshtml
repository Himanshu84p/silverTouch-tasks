@model QAManagement.Models.Question

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container shadow p-4 mb-5 bg-white rounded">
        <h4>Create Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = " col-form-label " })
        <span class="text-danger">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "col-form-label" })
        <span class="text-danger">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "col-form-label" })
        <span class="text-danger">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "col-form-label" })
        <span class="text-danger">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Option4, htmlAttributes: new { @class = "col-form-label" })
        <span class="text-danger">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "col-form-label" })
        <span class="text-danger">*</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="offset-md-2">
                <input type="submit" value="Create" class="btn btn-primary mb-3 mt-3" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Convert.ToInt32(Session["ForQuestionPaperId"]) }, new { @class = "btn btn-secondary" })
</div>
